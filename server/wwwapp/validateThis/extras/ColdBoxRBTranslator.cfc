<cfcomponent extends="ValidateThis.core.BaseTranslator" 
	hint="I act as a translator / adapter between ColdBox resource bundle and ValidateThis" 
	output="false">

	<cffunction name="setResourceBundle" returntype="void" output="false" hint="I am used to inject the ColdBox ResourceBundle">
		<cfargument name="resourcebundle" type="coldbox.system.plugins.ResourceBundle" hint="I am the ColdBox ResourceBundle plugin">
		<cfset variables.instance.resourcebundle = arguments.resourcebundle>
	</cffunction>

	<cffunction name="translate" returnType="any" access="public" output="false" hint="I translate text using the available resource bundle">
		<cfargument name="translateThis" type="Any" required="true" />
		<cfargument name="locale" type="Any" required="false" default="" />
		
		<cfset var theKey = safeKey(arguments.translateThis) />

		<cfif arguments.locale EQ variables.defaultLocale AND arguments.translateThis NEQ theKey>
			<!--- This allows a user to not have to provide translations for the default error messages generated by the framework for their default language --->
			<cfreturn arguments.translateThis />
		<cfelse>
			<cfreturn variables.instance.resourcebundle.getResource( resource=theKey, locale=arguments.locale ) />
		</cfif>
	</cffunction>

	<cffunction name="safeKey" returnType="any" access="public" output="false" hint="I take a message and turn it into a key">
		<cfargument name="message" type="Any" required="true" />
		
		<cfreturn REReplace(Replace(arguments.message," ","_","all"),"\W","","all") />
	</cffunction>

</cfcomponent>